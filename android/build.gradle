// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
buildscript {
    repositories {
        //jcenter()
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven { url  'https://repo1.maven.org/maven2/'}
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        mavenCentral()
        google()

//        google()
//        jcenter()
//        maven { url  'https://repo1.maven.org/maven2/'}
//        maven {
//            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
//        }
//        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.0"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
        classpath 'com.novoda:bintray-release:0.9'
        classpath 'com.aliyun.ams:emas-services:1.0.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}


allprojects {
    repositories {

        //jcenter()
        maven { url  'https://repo1.maven.org/maven2/'}
        maven { url 'https://jitpack.io' }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven { url "https://s01.oss.sonatype.org/content/groups/public" }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        mavenCentral()
        google()


//        google()
//        mavenLocal()
//        jcenter()
//        mavenCentral()
//        maven { url  'https://repo1.maven.org/maven2/'}
//        maven { url 'https://jitpack.io' }
//        maven { url "https://s01.oss.sonatype.org/content/groups/public" }
//        maven {
//            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
//        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}