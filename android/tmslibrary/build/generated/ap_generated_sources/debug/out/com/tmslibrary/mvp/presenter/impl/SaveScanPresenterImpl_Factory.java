// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.SaveScanInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class SaveScanPresenterImpl_Factory implements Factory<SaveScanPresenterImpl> {
  private final MembersInjector<SaveScanPresenterImpl> saveScanPresenterImplMembersInjector;

  private final Provider<SaveScanInteractorImpl> saveScanInteractorProvider;

  public SaveScanPresenterImpl_Factory(
      MembersInjector<SaveScanPresenterImpl> saveScanPresenterImplMembersInjector,
      Provider<SaveScanInteractorImpl> saveScanInteractorProvider) {
    assert saveScanPresenterImplMembersInjector != null;
    this.saveScanPresenterImplMembersInjector = saveScanPresenterImplMembersInjector;
    assert saveScanInteractorProvider != null;
    this.saveScanInteractorProvider = saveScanInteractorProvider;
  }

  @Override
  public SaveScanPresenterImpl get() {
    return MembersInjectors.injectMembers(
        saveScanPresenterImplMembersInjector,
        new SaveScanPresenterImpl(saveScanInteractorProvider.get()));
  }

  public static Factory<SaveScanPresenterImpl> create(
      MembersInjector<SaveScanPresenterImpl> saveScanPresenterImplMembersInjector,
      Provider<SaveScanInteractorImpl> saveScanInteractorProvider) {
    return new SaveScanPresenterImpl_Factory(
        saveScanPresenterImplMembersInjector, saveScanInteractorProvider);
  }
}
