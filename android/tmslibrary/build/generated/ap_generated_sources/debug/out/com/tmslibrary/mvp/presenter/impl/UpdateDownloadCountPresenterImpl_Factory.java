// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.UpdateDownloadCountInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class UpdateDownloadCountPresenterImpl_Factory
    implements Factory<UpdateDownloadCountPresenterImpl> {
  private final MembersInjector<UpdateDownloadCountPresenterImpl>
      updateDownloadCountPresenterImplMembersInjector;

  private final Provider<UpdateDownloadCountInteractorImpl> updateDownloadCountInteractorProvider;

  public UpdateDownloadCountPresenterImpl_Factory(
      MembersInjector<UpdateDownloadCountPresenterImpl>
          updateDownloadCountPresenterImplMembersInjector,
      Provider<UpdateDownloadCountInteractorImpl> updateDownloadCountInteractorProvider) {
    assert updateDownloadCountPresenterImplMembersInjector != null;
    this.updateDownloadCountPresenterImplMembersInjector =
        updateDownloadCountPresenterImplMembersInjector;
    assert updateDownloadCountInteractorProvider != null;
    this.updateDownloadCountInteractorProvider = updateDownloadCountInteractorProvider;
  }

  @Override
  public UpdateDownloadCountPresenterImpl get() {
    return MembersInjectors.injectMembers(
        updateDownloadCountPresenterImplMembersInjector,
        new UpdateDownloadCountPresenterImpl(updateDownloadCountInteractorProvider.get()));
  }

  public static Factory<UpdateDownloadCountPresenterImpl> create(
      MembersInjector<UpdateDownloadCountPresenterImpl>
          updateDownloadCountPresenterImplMembersInjector,
      Provider<UpdateDownloadCountInteractorImpl> updateDownloadCountInteractorProvider) {
    return new UpdateDownloadCountPresenterImpl_Factory(
        updateDownloadCountPresenterImplMembersInjector, updateDownloadCountInteractorProvider);
  }
}
