// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.DocConfigDetailInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class DocConfigDetailPresenterImpl_Factory
    implements Factory<DocConfigDetailPresenterImpl> {
  private final MembersInjector<DocConfigDetailPresenterImpl>
      docConfigDetailPresenterImplMembersInjector;

  private final Provider<DocConfigDetailInteractorImpl> docConfigDetailInteractorProvider;

  public DocConfigDetailPresenterImpl_Factory(
      MembersInjector<DocConfigDetailPresenterImpl> docConfigDetailPresenterImplMembersInjector,
      Provider<DocConfigDetailInteractorImpl> docConfigDetailInteractorProvider) {
    assert docConfigDetailPresenterImplMembersInjector != null;
    this.docConfigDetailPresenterImplMembersInjector = docConfigDetailPresenterImplMembersInjector;
    assert docConfigDetailInteractorProvider != null;
    this.docConfigDetailInteractorProvider = docConfigDetailInteractorProvider;
  }

  @Override
  public DocConfigDetailPresenterImpl get() {
    return MembersInjectors.injectMembers(
        docConfigDetailPresenterImplMembersInjector,
        new DocConfigDetailPresenterImpl(docConfigDetailInteractorProvider.get()));
  }

  public static Factory<DocConfigDetailPresenterImpl> create(
      MembersInjector<DocConfigDetailPresenterImpl> docConfigDetailPresenterImplMembersInjector,
      Provider<DocConfigDetailInteractorImpl> docConfigDetailInteractorProvider) {
    return new DocConfigDetailPresenterImpl_Factory(
        docConfigDetailPresenterImplMembersInjector, docConfigDetailInteractorProvider);
  }
}
