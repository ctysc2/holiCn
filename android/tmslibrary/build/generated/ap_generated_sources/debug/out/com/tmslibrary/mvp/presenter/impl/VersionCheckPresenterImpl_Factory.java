// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.VersionCheckInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class VersionCheckPresenterImpl_Factory implements Factory<VersionCheckPresenterImpl> {
  private final MembersInjector<VersionCheckPresenterImpl> versionCheckPresenterImplMembersInjector;

  private final Provider<VersionCheckInteractorImpl> versionCheckInteractorProvider;

  public VersionCheckPresenterImpl_Factory(
      MembersInjector<VersionCheckPresenterImpl> versionCheckPresenterImplMembersInjector,
      Provider<VersionCheckInteractorImpl> versionCheckInteractorProvider) {
    assert versionCheckPresenterImplMembersInjector != null;
    this.versionCheckPresenterImplMembersInjector = versionCheckPresenterImplMembersInjector;
    assert versionCheckInteractorProvider != null;
    this.versionCheckInteractorProvider = versionCheckInteractorProvider;
  }

  @Override
  public VersionCheckPresenterImpl get() {
    return MembersInjectors.injectMembers(
        versionCheckPresenterImplMembersInjector,
        new VersionCheckPresenterImpl(versionCheckInteractorProvider.get()));
  }

  public static Factory<VersionCheckPresenterImpl> create(
      MembersInjector<VersionCheckPresenterImpl> versionCheckPresenterImplMembersInjector,
      Provider<VersionCheckInteractorImpl> versionCheckInteractorProvider) {
    return new VersionCheckPresenterImpl_Factory(
        versionCheckPresenterImplMembersInjector, versionCheckInteractorProvider);
  }
}
