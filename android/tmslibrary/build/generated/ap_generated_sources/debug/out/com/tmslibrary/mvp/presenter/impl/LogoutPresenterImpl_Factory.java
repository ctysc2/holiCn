// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.LogoutInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class LogoutPresenterImpl_Factory implements Factory<LogoutPresenterImpl> {
  private final MembersInjector<LogoutPresenterImpl> logoutPresenterImplMembersInjector;

  private final Provider<LogoutInteractorImpl> logoutInteractorProvider;

  public LogoutPresenterImpl_Factory(
      MembersInjector<LogoutPresenterImpl> logoutPresenterImplMembersInjector,
      Provider<LogoutInteractorImpl> logoutInteractorProvider) {
    assert logoutPresenterImplMembersInjector != null;
    this.logoutPresenterImplMembersInjector = logoutPresenterImplMembersInjector;
    assert logoutInteractorProvider != null;
    this.logoutInteractorProvider = logoutInteractorProvider;
  }

  @Override
  public LogoutPresenterImpl get() {
    return MembersInjectors.injectMembers(
        logoutPresenterImplMembersInjector,
        new LogoutPresenterImpl(logoutInteractorProvider.get()));
  }

  public static Factory<LogoutPresenterImpl> create(
      MembersInjector<LogoutPresenterImpl> logoutPresenterImplMembersInjector,
      Provider<LogoutInteractorImpl> logoutInteractorProvider) {
    return new LogoutPresenterImpl_Factory(
        logoutPresenterImplMembersInjector, logoutInteractorProvider);
  }
}
