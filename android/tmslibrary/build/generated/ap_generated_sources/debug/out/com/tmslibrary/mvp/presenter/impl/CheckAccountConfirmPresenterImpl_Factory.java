// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.CheckAccountConfirmInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class CheckAccountConfirmPresenterImpl_Factory
    implements Factory<CheckAccountConfirmPresenterImpl> {
  private final MembersInjector<CheckAccountConfirmPresenterImpl>
      checkAccountConfirmPresenterImplMembersInjector;

  private final Provider<CheckAccountConfirmInteractorImpl> checkAccountConfirmInteractorProvider;

  public CheckAccountConfirmPresenterImpl_Factory(
      MembersInjector<CheckAccountConfirmPresenterImpl>
          checkAccountConfirmPresenterImplMembersInjector,
      Provider<CheckAccountConfirmInteractorImpl> checkAccountConfirmInteractorProvider) {
    assert checkAccountConfirmPresenterImplMembersInjector != null;
    this.checkAccountConfirmPresenterImplMembersInjector =
        checkAccountConfirmPresenterImplMembersInjector;
    assert checkAccountConfirmInteractorProvider != null;
    this.checkAccountConfirmInteractorProvider = checkAccountConfirmInteractorProvider;
  }

  @Override
  public CheckAccountConfirmPresenterImpl get() {
    return MembersInjectors.injectMembers(
        checkAccountConfirmPresenterImplMembersInjector,
        new CheckAccountConfirmPresenterImpl(checkAccountConfirmInteractorProvider.get()));
  }

  public static Factory<CheckAccountConfirmPresenterImpl> create(
      MembersInjector<CheckAccountConfirmPresenterImpl>
          checkAccountConfirmPresenterImplMembersInjector,
      Provider<CheckAccountConfirmInteractorImpl> checkAccountConfirmInteractorProvider) {
    return new CheckAccountConfirmPresenterImpl_Factory(
        checkAccountConfirmPresenterImplMembersInjector, checkAccountConfirmInteractorProvider);
  }
}
