// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.tmslibrary.mvp.presenter.impl;

import com.tmslibrary.mvp.interactor.impl.FileUploadInteractorImpl;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class FileUploadPresenterImpl_Factory implements Factory<FileUploadPresenterImpl> {
  private final MembersInjector<FileUploadPresenterImpl> fileUploadPresenterImplMembersInjector;

  private final Provider<FileUploadInteractorImpl> fileUploadInteractorProvider;

  public FileUploadPresenterImpl_Factory(
      MembersInjector<FileUploadPresenterImpl> fileUploadPresenterImplMembersInjector,
      Provider<FileUploadInteractorImpl> fileUploadInteractorProvider) {
    assert fileUploadPresenterImplMembersInjector != null;
    this.fileUploadPresenterImplMembersInjector = fileUploadPresenterImplMembersInjector;
    assert fileUploadInteractorProvider != null;
    this.fileUploadInteractorProvider = fileUploadInteractorProvider;
  }

  @Override
  public FileUploadPresenterImpl get() {
    return MembersInjectors.injectMembers(
        fileUploadPresenterImplMembersInjector,
        new FileUploadPresenterImpl(fileUploadInteractorProvider.get()));
  }

  public static Factory<FileUploadPresenterImpl> create(
      MembersInjector<FileUploadPresenterImpl> fileUploadPresenterImplMembersInjector,
      Provider<FileUploadInteractorImpl> fileUploadInteractorProvider) {
    return new FileUploadPresenterImpl_Factory(
        fileUploadPresenterImplMembersInjector, fileUploadInteractorProvider);
  }
}
